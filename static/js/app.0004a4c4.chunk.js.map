{"version":3,"sources":["assets/logo.png","firebase.js","screens/LoginScreen.js","screens/RegisterScreen.js","components/CustomListItem.js","screens/HomeScreen.js","screens/AddChatScreen.js","screens/ChatScreen.js","App.js"],"names":["module","exports","db","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","firestore","auth","LoginScreen","navigation","useState","email","setEmail","password","setPssword","useEffect","onAuthStateChanged","authUser","replace","signIn","signInWithEmailAndPassword","catch","error","alert","message","ScrollView","style","styles","scrollContainer","KeyboardAvoidingView","behavior","container","keyboardVerticalOffset","StatusBar","source","require","width","height","View","inputContainer","placeholder","autoFocus","type","value","onChangeText","text","secureTextEntry","onSubmitEditing","theme","colors","primary","secondary","Button","titleStyle","raised","containerStyle","buttonContainer","onPress","title","buttonSecContainer","navigate","StyleSheet","create","paddingVertical","backgroundColor","flex","alignItems","justifyContent","padding","marginTop","marginBottom","button","color","RegisterScreen","name","setName","setPassword","imageUrl","setImageUrl","useLayoutEffect","setOptions","headerBackTitle","enabled","h3","createUserWithEmailAndPassword","then","user","updateProfile","displayName","photoURL","collection","doc","set","CustomListItem","id","chatName","chatImg","enterChat","seen","lastName","schedulePushNotification","notify","key","rounded","uri","status","position","top","right","Content","Title","fontWeight","Subtitle","numberOfLines","ellipsizeMode","Notifications","handleNotification","a","async","shouldShowAlert","shouldPlaySound","shouldSetBadge","HomeScreen","chats","setChats","users","setUsers","usersD","setUsersD","usersDName","setUsersDName","signOutUser","signOut","currentUser","onSnapshot","snapshot","docs","map","data","d","dName","i","headerStyle","headerTitleStyle","headerTintColor","headerTitleAlign","headerLeft","marginLeft","TouchableOpacity","activeOpacity","headerRight","flexDirection","marginRight","AntDesign","size","SimpleLineIcons","SafeAreaView","AddChatScreen","input","setInput","createChat","goBack","leftIcon","imageStyle","h2","AppTitle","display","margin","textAlign","alignSelf","ChatScreen","route","messages","setMessages","headerBackTitleVisible","headerTitle","params","Text","sendMessage","Keyboard","dismiss","add","timestamp","FieldValue","serverTimestamp","update","orderBy","scrollViewRef","useRef","Platform","OS","TouchableWithoutFeedback","chatView","ref","onContentSizeChange","current","scrollToEnd","animated","reciever","recieverText","sender","senderText","footer","TextInput","textInput","Ionicons","bottom","borderRadius","paddingTop","borderBottomRightRadius","maxWidth","borderBottomLeftRadius","senderName","left","paddingRight","fontSize","Stack","createNativeStackNavigator","globalScreenOptions","App","NavigationContainer","Navigator","screenOptions","Screen","component"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,kC,gLCoBrCC,G,eANoB,GAAtBC,IAASC,KAAKC,OACTF,IAASG,cAXK,CACrBC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,8CAOHT,IAASU,OAGDC,aACRC,EAAKZ,IAASY,OCiDLC,EA/DK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAcnB,EAA0BC,mBAAS,IAAnC,WAAOC,EAAP,KAAcC,EAAd,KACA,EAA+BF,mBAAS,IAAxC,WAAOG,EAAP,KAAiBC,EAAjB,KACAC,qBAAU,WAON,OANoBR,EAAKS,oBAAmB,SAACC,GACrCA,GAEAR,EAAWS,QAAQ,aAI5B,IACH,IAAMC,EAAS,WACXZ,EAAKa,2BAA2BT,EAAOE,GAClCQ,OAAM,SAAAC,GAAK,OAAIC,MAAMD,EAAME,aAGpC,OACI,kBAACC,EAAA,EAAD,CAAYC,MAAOC,EAAOC,iBAC1B,kBAACC,EAAA,EAAD,CAAsBC,SAAS,UAAUJ,MAAOC,EAAOI,UAAWC,uBAAwB,IACtF,kBAACC,EAAA,EAAD,CAAWP,MAAM,UACjB,kBAAC,IAAD,CAAOQ,OAAQC,EAAQ,KACnBT,MAAO,CAAEU,MAAO,IAAKC,OAAQ,OAGjC,kBAACC,EAAA,EAAD,CAAMZ,MAAOC,EAAOY,gBAChB,kBAAC,IAAD,CAAOC,YAAY,QACfC,WAAS,EACTC,KAAK,QACLC,MAAOhC,EACPiC,aAAc,SAACC,GAAD,OAAUjC,EAASiC,MAErC,kBAAC,IAAD,CAAOL,YAAY,WACfM,iBAAe,EACfJ,KAAK,WACLC,MAAO9B,EACP+B,aAAc,SAACC,GAAD,OAAU/B,EAAW+B,IACnCE,gBAAiB5B,KAGzB,kBAAC,IAAD,CAAe6B,MAnDT,CACVC,OAAQ,CACJC,QAAS,UACTC,UAAW,SAEfC,OAAQ,CACJC,WAAY,MA8CR,kBAAC,IAAD,CAAQC,QAAM,EAACC,eAAgB5B,EAAO6B,gBAAiBC,QAAStC,EAAQuC,MAAM,UAC9E,kBAAC,IAAD,CAAQH,eAAgB5B,EAAOgC,mBAAoBF,QAAS,kBAAMhD,EAAWmD,SAAS,aAAalB,KAAK,UAAUgB,MAAM,cAE5H,kBAACpB,EAAA,EAAD,CAAMZ,MAAO,CAAEW,OAAQ,SAQ7BV,EAASkC,IAAWC,OAAO,CAC7BlC,gBAAiB,CACbmC,gBAAiB,GACjBC,gBAAiB,SAErBjC,UAAW,CACPkC,KAAM,EACNC,WAAY,SACZC,eAAgB,SAChBC,QAAS,GACTJ,gBAAiB,SAErBzB,eAAgB,CACZ8B,UAAW,GACXC,aAAc,GACdlC,MAAO,KAEXmC,OAAQ,CACJnC,MAAO,IACPiC,UAAW,GACXL,gBAAiB,UACjBQ,MAAO,SAEXhB,gBAAiB,CACbpB,MAAO,IACPiC,UAAW,GACXL,gBAAiB,WAErBL,mBACA,CACIvB,MAAO,IACPiC,UAAW,GACXL,gBAAiB,QACjBQ,MAAO,aCXAC,EAzFQ,SAAC,GAAoB,IAAlBhE,EAAiB,EAAjBA,WAatB,EAAwBC,mBAAS,IAAjC,WAAOgE,EAAP,KAAaC,EAAb,KACA,EAA0BjE,mBAAS,IAAnC,WAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,WAAOG,EAAP,KAAiB+D,EAAjB,KACA,EAAgClE,mBAAS,IAAzC,WAAOmE,EAAP,KAAiBC,EAAjB,KAEAC,2BAAgB,WACZtE,EAAWuE,WAAW,CAClBC,gBAAiB,YAEtB,CAACxE,IAoBJ,OACI,kBAACgB,EAAA,EAAD,CAAYC,MAAOC,EAAOC,iBACtB,kBAACC,EAAA,EAAD,CAAsBC,SAAS,UAAUJ,MAAOC,EAAOI,UAAWmD,SAAO,EAAClD,uBAAwB,IAC9F,kBAACC,EAAA,EAAD,CAAWP,MAAM,UACjB,kBAAC,IAAD,CAAMyD,IAAE,EAACzD,MAAO,CAAE4C,aAAc,KAAhC,wBAGA,kBAAChC,EAAA,EAAD,CAAMZ,MAAOC,EAAOY,gBAChB,kBAAC,IAAD,CACIC,YAAY,YACZC,WAAS,EACTC,KAAK,OACLC,MAAO+B,EACP9B,aAAc,SAACC,GAAD,OAAU8B,EAAQ9B,MAEpC,kBAAC,IAAD,CACIL,YAAY,QAEZE,KAAK,QACLC,MAAOhC,EACPiC,aAAc,SAACC,GAAD,OAAUjC,EAASiC,MAErC,kBAAC,IAAD,CACIL,YAAY,WACZM,iBAAe,EACfJ,KAAK,WACLC,MAAO9B,EACP+B,aAAc,SAACC,GAAD,OAAU+B,EAAY/B,MAExC,kBAAC,IAAD,CACIL,YAAY,iCACZE,KAAK,OACLC,MAAOkC,EACPjC,aAAc,SAACC,GAAD,OAAUiC,EAAYjC,OAI5C,kBAAC,IAAD,CAAeG,MA9Eb,CACVC,OAAQ,CACJC,QAAS,UACTC,UAAW,SAEfC,OAAQ,CACJC,WAAY,MA0EJ,kBAAC,IAAD,CAAQC,QAAM,EAACC,eAAgB5B,EAAO6B,gBAAiBC,QA1DtD,WACG,IAAZoB,GACAC,EAAY,wBAA0BnE,GAE1CJ,EACK6E,+BAA+BzE,EAAOE,GACtCwE,MAAK,SAACpE,GACHA,EAASqE,KAAKC,cAAc,CACxBC,YAAad,EACbe,SAAuB,KAAbZ,EAAkB,wBAA0BlE,EAAQkE,IAElEnF,EAAGgG,WAAW,SAASC,IAAIhF,GAAOiF,IAAI,CAClCJ,YAAad,EACbe,SAAuB,KAAbZ,EAAkB,wBAA0BlE,EAAQkE,OAGnExD,OAAM,SAAAC,GAAK,OAAIC,MAAMD,EAAME,aA0CoDkC,MAAM,cAEpF,kBAACpB,EAAA,EAAD,CAAMZ,MAAO,CAAEW,OAAQ,SAQjCV,EAASkC,IAAWC,OAAO,CAC7BlC,gBAAiB,CACbmC,gBAAiB,GACjBC,gBAAiB,SAErBjC,UAAW,CACPkC,KAAM,EACNC,WAAY,SACZC,eAAgB,SAChBC,QAAS,GACTJ,gBAAiB,SAErBO,OAAQ,CACJnC,MAAO,IACPiC,UAAW,GACXL,gBAAiB,UACjBQ,MAAO,SAEXhB,gBAAiB,CACbpB,MAAO,IACPiC,UAAW,GACXL,gBAAiB,WAErBzB,eAAgB,CACZ8B,UAAW,GACXC,aAAc,GACdlC,MAAO,O,oDCxEAyD,EA7CM,SAAC,GAAuG,IAAtGC,EAAqG,EAArGA,GAAGC,EAAkG,EAAlGA,SAASP,EAAyF,EAAzFA,YAAaQ,EAA4E,EAA5EA,QAAQC,EAAoE,EAApEA,UAAUzE,EAA0D,EAA1DA,QAAQ0E,EAAkD,EAAlDA,KAAsCC,GAAY,EAA7CC,yBAA6C,EAApBC,OAAoB,EAAZF,UAe5G,OACG,kBAAC,IAAD,CAAUG,IAAKR,EAAIrC,QAAS,kBAAIwC,EAAUH,EAAGC,EAASC,EAAQR,KAC1D,kBAAClD,EAAA,EAAD,KACA,kBAAC,IAAD,CACAiE,SAAO,EACPrE,OAAQ,CACJsE,IAAIR,KAKPE,EAAK,qCAAQ,kBAAC,IAAD,CACbO,OAAO,UACPlD,eAAgB,CAAEmD,SAAU,WAAYC,KAAM,EAAGC,OAAQ,MAK1D,kBAAC,IAASC,QAAV,KACI,kBAAC,IAASC,MAAV,CAAgBpF,MAAO,CAACqF,WAAW,QAC/BvB,GAEJ,kBAAC,IAASwB,SAAV,CAAmBC,cAAe,EAAGC,cAAc,QAC9Cf,EAASA,EAAW,KAAO3E,EAAQ,O,OC7BvD2F,EAAqC,CACnCC,mBAAoB,oBAAAC,EAAAC,OAAA,yEAAa,CAC/BC,iBAAiB,EACjBC,iBAAiB,EACjBC,gBAAgB,IAHE,+DAQtB,IAyLeC,EAzLI,SAAC,GAAoB,IAAlBjH,EAAiB,EAAjBA,WACpB,EAA0BC,mBAAS,IAAnC,WAAOiH,EAAP,KAAcC,EAAd,KACA,EAA0BlH,mBAAS,IAAnC,WAAOmH,EAAP,KAAcC,EAAd,KACA,EAA4BpH,mBAAS,IAArC,WAAOqH,EAAP,KAAeC,EAAf,KACA,EAAoCtH,mBAAS,IAA7C,WAAOuH,EAAP,KAAmBC,EAAnB,KAiDAnH,qBAAU,cAiBP,IAKH,IAAMoH,EAAc,WAClB5H,EAAK6H,UAAU/C,MAAK,WAClB5E,EAAWS,QAAQ,aAGvBH,qBAAU,WASR,OARoBrB,EAAGgG,WAAWnF,EAAK8H,YAAY1H,OAAO2H,YAAW,SAACC,GAAD,OACnEX,EAASW,EAASC,KAAKC,KAAI,SAAC9C,GAAD,MAAU,CACnCG,GAAIH,EAAIG,GACR4C,KAAM/C,EAAI+C,iBAMb,IAEH3H,qBAAU,WAYR,OAVoBrB,EAAGgG,WAAW,SAAS4C,YAAW,SAACC,GAAD,OACpDT,EAASS,EAASC,KAAKC,KAAI,SAAC9C,GAAD,MAAU,CACnCG,GAAIH,EAAIG,GACR4C,KAAM/C,EAAI+C,iBASb,IAEH3H,qBAAU,WAIR,IAFA,IAAI4H,EAAI,GACJC,EAAQ,GACHC,EAAI,EAAGA,EAAIhB,EAAMhI,OAAQgJ,IAChCF,EAAEd,EAAMgB,GAAG/C,IAAM+B,EAAMgB,GAAGH,KAAKjD,SAC/BmD,EAAMf,EAAMgB,GAAG/C,IAAM+B,EAAMgB,GAAGH,KAAKlD,YAIrCwC,EAAUW,GACVT,EAAcU,KACb,CAACf,IAIJ9C,2BAAgB,WACdtE,EAAWuE,WAAW,CACpBtB,MAAO,QACPoF,YAAa,CAAE9E,gBAAiB,WAChC+E,iBAAkB,CAAEvE,MAAO,SAC3BwE,gBAAiB,QACjBC,iBAAkB,SAClBC,WAAY,0BAAO,kBAAC5G,EAAA,EAAD,CAAMZ,MAAO,CAAEyH,WAAY,IAC5C,kBAACC,EAAA,EAAD,CAAkBC,cAAe,GAAK5F,QAAS0E,GAC7C,kBAAC,IAAD,CAAQ5B,SAAO,EACbrE,OAAQ,CAAEsE,IAAK,MAACjG,GAAD,SAACA,EAAM8H,cAAN,EAAmB5C,SAApB,MAAiClF,GAAjC,SAAiCA,EAAM8H,kBAAvC,EAAiC,EAAmB5C,SAAY,6EAKrF6D,YAAa,kBAAO,kBAAChH,EAAA,EAAD,CAAMZ,MAAO,CAC/B6H,cAAe,MACfpF,eAAgB,gBAChB/B,MAAO,GACPoH,YAAa,IAEb,kBAACJ,EAAA,EAAD,CAAkBC,cAAe,IAC/B,kBAACI,EAAA,EAAD,CAAW/E,KAAK,UAAUgF,KAAM,GAAIlF,MAAM,WAE5C,kBAAC4E,EAAA,EAAD,CAAkB3F,QAAS,kBAAMhD,EAAWmD,SAAS,YACnDyF,cAAe,IACf,kBAACM,EAAA,EAAD,CAAiBjF,KAAK,SAASgF,KAAM,GAAIlF,MAAM,iBAIpD,CAAC/D,IACJ,IAAMwF,EAAY,SAACH,EAAIC,EAAUC,EAASR,GACxC/E,EAAWmD,SAAS,OAAQ,CAC1BkC,KACAC,WACAC,UACAR,iBASJ,OALAzE,qBAAU,cAGP,CAAC4G,IAGF,kBAACiC,EAAA,EAAD,KACE,kBAACnI,EAAA,EAAD,CAAYC,MAAOC,EAAOI,WACvB4F,EAAMc,KAAI,gBAAG3C,EAAH,EAAGA,GAAH,IAAO4C,KAAQ3C,EAAf,EAAeA,SAAUvE,EAAzB,EAAyBA,QAAS0E,EAAlC,EAAkCA,KAAMG,EAAxC,EAAwCA,OAAQb,EAAhD,EAAgDA,YAAhD,OAAoE,kBAAC,EAAD,CAAgBc,IAAKR,EAAIA,GAAIA,EAC1GC,SAAUA,EAAUE,UAAWA,EAAWT,YAAayC,EAAWlC,GAAYkC,EAAWlC,GAAYA,EACrGvE,QAASA,EAAS0E,KAAMA,EAAMG,OAAQA,EAAQF,SAAUX,EAExDQ,QAAS+B,EAAOhC,GAAYgC,EAAOhC,GAAY,wBAA0BA,UAW7EpE,EAASkC,IAAWC,OAAO,CAC/B/B,UAAW,CACTM,OAAQ,U,SC9IGwH,EAjEO,SAAC,GAAoB,IAAlBpJ,EAAiB,EAAjBA,WAerB,EAA0BC,mBAAS,IAAnC,WAAOoJ,EAAP,KAAcC,EAAd,KACMC,EAAa,oBAAA3C,EAAAC,OAAA,kEAAAD,EAAA,MACT3H,EAAGgG,WAAWnF,EAAK8H,YAAY1H,OAAOgF,IAAImE,GAAOlE,IAAI,CACvDG,SAAU+D,IAETzE,MAAK,eACLhE,OAAM,SAAAC,GAAK,OAAIC,MAAMD,EAAME,aALjB,yBAAA6F,EAAA,MAOT3H,EAAGgG,WAAWoE,GAAOnE,IAAIpF,EAAK8H,YAAY1H,OAAOiF,IAAI,CACvDG,SAAUxF,EAAK8H,YAAY1H,QAE1B0E,MAAK,WACF5E,EAAWwJ,YAEd5I,OAAM,SAAAC,GAAK,OAAIC,MAAMD,EAAME,aAbjB,6DA0BnB,OATAuD,2BAAgB,WACZtE,EAAWuE,WACP,CACItB,MAAO,qBAKhB,CAACjD,IAEA,kBAAC6B,EAAA,EAAD,CAAMZ,MAAOC,EAAOI,WAChB,kBAAC,IAAD,CAAOS,YAAY,oBACfI,aAAc,SAAAC,GAAI,OAAIkH,EAASlH,IAC/BE,gBAAiBiH,EACjBE,SACI,kBAAC,UAAD,CAAMxF,KAAK,SAAShC,KAAK,YAAY8B,MAAM,UAAUkF,KAAM,OAGnE,kBAAC,IAAD,CAAe1G,MAjDT,CACVC,OAAQ,CACJC,QAAS,QACTC,UAAW,SAEfC,OAAQ,CACJC,WAAY,MA4CR,kBAAC,IAAD,CACII,QAASuG,EAAYtH,KAAK,UAC1Ba,eAAgB5B,EAAO6B,gBACvBE,MAAM,YAId,kBAAC,IAAD,CAAOxB,OAAQC,EAAQ,KACnBT,MAAOC,EAAOwI,aAClB,kBAAC,IAAD,CAAMC,IAAE,EAAC1I,MAAOC,EAAO0I,UAAvB,WAKN1I,EAASkC,IAAWC,OAAO,CAE7B/B,UAAW,CACPqC,QAAS,GACTkG,QAAS,OACTnG,eAAgB,SAChBoF,cAAe,UAEnB/F,gBAAiB,CAEba,UAAW,GACXL,gBAAiB,UACjBQ,MAAO,SAEX2F,WAAY,CACR9H,OAAQ,IACRD,MAAO,IACPmI,OAAQ,OAEZF,SAAU,CACNE,OAAQ,GACRC,UAAW,SACXpI,MAAO,OACPoC,MAAO,OACP+F,OAAQ,MACRlG,UAAW,EACXF,eAAe,SACfsG,UAAW,Y,wDC6CJC,EAtII,SAAC,GAA2B,IAAzBjK,EAAwB,EAAxBA,WAAYkK,EAAY,EAAZA,MAC9B,EAA0BjK,mBAAS,IAAnC,WAAOoJ,EAAP,KAAcC,EAAd,KACA,EAAgCrJ,mBAAS,IAAzC,WAAOkK,EAAP,KAAiBC,EAAjB,KACA9F,2BAAgB,WACZtE,EAAWuE,WAAW,CAClBtB,MAAO,OACPoH,wBAAwB,EACxB7B,iBAAkB,OAClB8B,YAAa,kBAAM,kBAACzI,EAAA,EAAD,CACfZ,MAAO,CACH6H,cAAe,MACfrF,WAAY,WAEhB,kBAAC,IAAD,CAAQqC,SAAO,EACXrE,OAAQ,CAAEsE,IAAKmE,EAAMK,OAAOhF,WAEhC,kBAACiF,EAAA,EAAD,CAAMvJ,MAAO,CAAE8C,MAAO,QAAS2E,WAAY,GAAIpC,WAAY,QACtD4D,EAAMK,OAAOxF,mBAY3B,CAAC/E,IAEJ,IAAMyK,EAAc,oBAAA7D,EAAAC,OAAA,uDAEhB6D,IAASC,UAFO,WAAA/D,EAAA,MAKV3H,EAAGgG,WAAWnF,EAAK8H,YAAY1H,OAAOgF,IAAIgF,EAAMK,OAAOlF,IAAIJ,WAAW,YAAY2F,IAAI,CACxFC,UAAW3L,YAAmB4L,WAAWC,mBAAqB,KAC9DhK,QAASsI,EACTtE,YAAajF,EAAK8H,YAAY7C,YAC9B7E,MAAOJ,EAAK8H,YAAY1H,MACxB8E,SAAUlF,EAAK8H,YAAY5C,YAVf,yBAAA4B,EAAA,MAaV3H,EAAGgG,WAAWiF,EAAMK,OAAOlF,IAAIH,IAAIpF,EAAK8H,YAAY1H,OAAO+E,WAAW,YAAY2F,IAAI,CACxFC,UAAW3L,YAAmB4L,WAAWC,mBAAqB,KAC9DhK,QAASsI,EACTtE,YAAajF,EAAK8H,YAAY7C,YAC9B7E,MAAOJ,EAAK8H,YAAY1H,MACxB8E,SAAUlF,EAAK8H,YAAY5C,YAlBf,yBAAA4B,EAAA,MAqBV3H,EAAGgG,WAAWiF,EAAMK,OAAOlF,IAAIH,IAAIpF,EAAK8H,YAAY1H,OAAO8K,OAAO,CACpEH,UAAW3L,YAAmB4L,WAAWC,mBAAqB,KAC9DhK,QAASsI,EACTtE,YAAajF,EAAK8H,YAAY7C,YAC9B7E,MAAOJ,EAAK8H,YAAY1H,MACxB8E,SAAUlF,EAAK8H,YAAY5C,SAC3BS,MAAM,EACNG,QAAQ,KA5BI,yBAAAgB,EAAA,MA+BV3H,EAAGgG,WAAWnF,EAAK8H,YAAY1H,OAAOgF,IAAIgF,EAAMK,OAAOlF,IAAI2F,OAAO,CACpEH,UAAW3L,YAAmB4L,WAAWC,mBAAqB,KAC9DhK,QAASsI,EACTtE,YAAajF,EAAK8H,YAAY7C,YAC9B7E,MAAOJ,EAAK8H,YAAY1H,MACxB8E,SAAUlF,EAAK8H,YAAY5C,SAC3BS,MAAM,EACNG,QAAQ,KAtCI,OAyChB0D,EAAS,IAzCO,8DA4CpBhF,2BAAgB,WASZ,OARoBrF,EAAGgG,WAAWnF,EAAK8H,YAAY1H,OAAOgF,IAAIgF,EAAMK,OAAOlF,IACvEJ,WAAW,YAAYgG,QAAQ,aAAapD,YAAW,SAAAC,GAAQ,OAAIsC,EAC/DtC,EAASC,KAAKC,KAAI,SAAC9C,GAAD,MAAU,CACxBG,GAAIH,EAAIG,GACR4C,KAAM/C,EAAI+C,iBAKvB,CAACiC,IAEJ5J,qBAAU,WACNrB,EAAGgG,WAAWnF,EAAK8H,YAAY1H,OAAOgF,IAAIgF,EAAMK,OAAOlF,IAAI2F,OAAO,CAC9DvF,MAAM,EACNG,QAAQ,MAGb,CAACuE,IACJ,IAAMe,EAAgBC,mBACtB,OACI,kBAAC/J,EAAA,EAAD,CAAsBC,SAA0B,QAAhB+J,IAASC,GAAe,UAAY,SAAU9J,uBAAwB,IAAKN,MAAOC,EAAOI,WACrH,kBAACgK,EAAA,EAAD,CAA0BrK,MAAO,CAAC4I,QAAS,SACvC,oCACI,kBAAC7I,EAAA,EAAD,CAAYC,MAAOC,EAAOqK,SACtBC,IAAKN,EACLO,oBAAqB,kBAAMP,EAAcQ,QAAQC,YAAY,CAAEC,UAAU,MAExEzB,EAASnC,KAAI,gBAAG3C,EAAH,EAAGA,GAAI4C,EAAP,EAAOA,KAAP,OACVA,EAAK/H,QAAUJ,EAAK8H,YAAY1H,MAExB,kBAAC2B,EAAA,EAAD,CAAMgE,IAAKR,EAAIpE,MAAOC,EAAO2K,UACzB,kBAACrB,EAAA,EAAD,CAAMvJ,MAAOC,EAAO4K,cAAe7D,EAAKlH,UAK5C,kBAACc,EAAA,EAAD,CAAMgE,IAAKR,EAAIpE,MAAOC,EAAO6K,QACzB,kBAACvB,EAAA,EAAD,CAAMvJ,MAAOC,EAAO8K,YAAa/D,EAAKlH,cAK1D,kBAACc,EAAA,EAAD,CAAMZ,MAAOC,EAAO+K,QAChB,kBAACC,EAAA,EAAD,CAAWnK,YAAY,iBACnBG,MAAOmH,EACPlH,aAAc,SAACC,GAAD,OAAUkH,EAASlH,IACjCnB,MAAOC,EAAOiL,UACd7J,gBAAiBmI,IAErB,kBAAC9B,EAAA,EAAD,CAAkB3F,QAASyH,EAAa7B,cAAe,IACnD,kBAACwD,EAAA,EAAD,CAAUnI,KAAK,OAAOgF,KAAM,GAAIlF,MAAM,kBAS5D7C,EAASkC,IAAWC,OAAO,CAC7B/B,UAAW,CACPkC,KAAM,GAEVyI,OAAQ,CACJnD,cAAe,MACfrF,WAAY,SACZ9B,MAAO,OACPgC,QAAS,GACTJ,gBAAiB,eAErB4I,UAAW,CACPE,OAAQ,EACRzK,OAAQ,GACR4B,KAAM,EACNuF,YAAa,GACbxF,gBAAiB,UAEjBI,QAAS,GACTI,MAAO,OACPuI,aAAc,IAGlBf,SAAU,CACN/H,KAAM,EACN+I,WAAY,IAEhBT,aAAc,CACV/H,MAAO,QACPuC,WAAY,OAIhB0F,WAAY,CACRjI,MAAO,QACPuC,WAAY,OAIhBuF,SAAU,CACNlI,QAAS,GACTqG,UAAW,WACXzG,gBAAiB,UACjB+I,aAAc,GACdE,wBAAyB,EACzBzD,YAAa,GACblF,aAAc,EACd4I,SAAU,MACVxG,SAAU,YAEd8F,OAAQ,CACJpI,QAAS,GACTJ,gBAAiB,UACjByG,UAAW,aACXsC,aAAc,GACdI,uBAAwB,EACxBhE,WAAY,GACZ7E,aAAc,EACd4I,SAAU,MACVxG,SAAU,YAEd0G,WAAY,CACRC,KAAM,GACNC,aAAc,GACdC,SAAU,GACV/I,MAAO,WCpMTgJ,EAAQC,cAERC,EAAsB,CAC1B5E,YAAa,CAAE9E,gBAAiB,WAChC+E,iBAAkB,CAAEvE,MAAO,SAC3BwE,gBAAiB,SAIJ,SAAS2E,IAEtB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACJ,EAAMK,UAAP,CAAiBC,cAAeJ,GAC9B,kBAACF,EAAMO,OAAP,CAAcrJ,KAAK,QAAQsJ,UAAWxN,IACtC,kBAACgN,EAAMO,OAAP,CAAcrJ,KAAK,WAAWsJ,UAAWvJ,IACzC,kBAAC+I,EAAMO,OAAP,CAAcrJ,KAAK,OAAOsJ,UAAWtG,IACrC,kBAAC8F,EAAMO,OAAP,CAAcrJ,KAAK,UAAUsJ,UAAWnE,IACxC,kBAAC2D,EAAMO,OAAP,CAAcrJ,KAAK,OAAOsJ,UAAWtD,MAM9B7G,IAAWC,OAAO,CAC/B/B,UAAW,CACTkC,KAAM,EACND,gBAAiB,OACjBE,WAAY,SACZC,eAAgB,a","file":"static/js/app.0004a4c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.985c7f0a.png\";","import firebase from 'firebase/app'\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC42m_4cJ3j6C5mtZHzctqoxRb63I5uEhc\",\r\n  authDomain: \"rnchat-d0d3f.firebaseapp.com\",\r\n  projectId: \"rnchat-d0d3f\",\r\n  storageBucket: \"rnchat-d0d3f.appspot.com\",\r\n  messagingSenderId: \"546537876108\",\r\n  appId: \"1:546537876108:web:e69c8ba9301856bcff29a9\"\r\n  };\r\n\r\nlet app;\r\nif (firebase.apps.length==0){\r\n   app = firebase.initializeApp(firebaseConfig);\r\n} else {\r\n  app=firebase.app()\r\n}\r\n\r\nconst db= app.firestore();\r\nconst auth=firebase.auth();\r\nexport { db,auth }","import React, { useEffect, useState } from 'react'\r\nimport { KeyboardAvoidingView, ScrollView, StyleSheet, Text, View } from 'react-native';\r\nimport { ThemeProvider, Button, Input, Image } from \"react-native-elements\";\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { auth } from '../firebase';\r\n// require('../assets/jotokIcon.png');\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n\r\n    const theme = {\r\n        colors: {\r\n            primary: '#2B3595',\r\n            secondary: 'white'\r\n        },\r\n        Button: {\r\n            titleStyle: {\r\n                // color: 'white',\r\n            },\r\n        },\r\n    };\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPssword] = useState('');\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged((authUser) => {\r\n            if (authUser) {\r\n                // console.log(authUser)\r\n                navigation.replace(\"Home\")\r\n            }\r\n        })\r\n        return unsubscribe;\r\n    }, []);\r\n    const signIn = () => {\r\n        auth.signInWithEmailAndPassword(email, password)\r\n            .catch(error => alert(error.message))\r\n    }\r\n\r\n    return (\r\n        <ScrollView style={styles.scrollContainer}>\r\n        <KeyboardAvoidingView behavior='padding' style={styles.container} keyboardVerticalOffset={50}>\r\n            <StatusBar style=\"light\" />\r\n            <Image source={require('../assets/logo.png')}\r\n                style={{ width: 200, height: 200 }}\r\n            />\r\n\r\n            <View style={styles.inputContainer}>\r\n                <Input placeholder=\"Email\"\r\n                    autoFocus\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChangeText={(text) => setEmail(text)}\r\n                />\r\n                <Input placeholder=\"Password\"\r\n                    secureTextEntry\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChangeText={(text) => setPssword(text)}\r\n                    onSubmitEditing={signIn}\r\n                />\r\n            </View>\r\n            <ThemeProvider theme={theme}>\r\n                <Button raised containerStyle={styles.buttonContainer} onPress={signIn} title=\"Login\"/>\r\n                <Button containerStyle={styles.buttonSecContainer} onPress={() => navigation.navigate('Register')} type=\"outline\" title=\"Register\" />\r\n            </ThemeProvider>\r\n            <View style={{ height: 20 }} />\r\n        </KeyboardAvoidingView>\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    scrollContainer: {\r\n        paddingVertical: 20,\r\n        backgroundColor: 'white'\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: 10,\r\n        backgroundColor: 'white'\r\n    },\r\n    inputContainer: {\r\n        marginTop: 40,\r\n        marginBottom: 20,\r\n        width: 300\r\n    },\r\n    button: {\r\n        width: 200,\r\n        marginTop: 10,\r\n        backgroundColor: \"#2B3595\",\r\n        color: 'white'\r\n    },\r\n    buttonContainer: {\r\n        width: 200,\r\n        marginTop: 10,\r\n        backgroundColor: '#2B3595'\r\n    },\r\n    buttonSecContainer:\r\n    {\r\n        width: 200,\r\n        marginTop: 10,\r\n        backgroundColor: 'white',\r\n        color: '#2B3595'\r\n    }\r\n})\r\n","import React, { useLayoutEffect, useState } from 'react';\r\nimport { KeyboardAvoidingView, ScrollView, StyleSheet, View } from 'react-native';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { ThemeProvider, Button, Input, Text } from 'react-native-elements';\r\nimport { auth, db } from \"../firebase\"\r\nconst RegisterScreen = ({ navigation }) => {\r\n    const theme = {\r\n        colors: {\r\n            primary: '#2B3595',\r\n            secondary: 'white'\r\n        },\r\n        Button: {\r\n            titleStyle: {\r\n                // color: 'white',\r\n            },\r\n        },\r\n    };\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [imageUrl, setImageUrl] = useState(\"\");\r\n\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            headerBackTitle: \"Login\",\r\n        })\r\n    }, [navigation])\r\n    const register = () => {\r\n        if (imageUrl == \"\") {\r\n            setImageUrl(\"https://robohash.org/\" + email)\r\n        }\r\n        auth\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then((authUser) => {\r\n                authUser.user.updateProfile({\r\n                    displayName: name,\r\n                    photoURL: imageUrl === \"\" ? \"https://robohash.org/\" + email : imageUrl\r\n                })\r\n                db.collection(\"users\").doc(email).set({\r\n                    displayName: name,\r\n                    photoURL: imageUrl === \"\" ? \"https://robohash.org/\" + email : imageUrl\r\n                })\r\n                // console.log(authUser.user)\r\n            }).catch(error => alert(error.message))\r\n    }\r\n\r\n    return (\r\n        <ScrollView style={styles.scrollContainer}>\r\n            <KeyboardAvoidingView behavior=\"padding\" style={styles.container} enabled keyboardVerticalOffset={50}>\r\n                <StatusBar style=\"light\" />\r\n                <Text h3 style={{ marginBottom: 50 }}>\r\n                    Create JoTok Account\r\n                </Text>\r\n                <View style={styles.inputContainer}>\r\n                    <Input\r\n                        placeholder=\"Full Name\"\r\n                        autoFocus\r\n                        type=\"text\"\r\n                        value={name}\r\n                        onChangeText={(text) => setName(text)}\r\n                    />\r\n                    <Input\r\n                        placeholder=\"Email\"\r\n\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChangeText={(text) => setEmail(text)}\r\n                    />\r\n                    <Input\r\n                        placeholder=\"Password\"\r\n                        secureTextEntry\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChangeText={(text) => setPassword(text)}\r\n                    />\r\n                    <Input\r\n                        placeholder=\"Profile Picture Url (optional)\"\r\n                        type=\"text\"\r\n                        value={imageUrl}\r\n                        onChangeText={(text) => setImageUrl(text)}\r\n                    // onSubmitEditing={register}\r\n                    />\r\n                </View>\r\n                <ThemeProvider theme={theme}>\r\n                    {/* <Button raised title=\"Register\" onPress={register} style={styles.button} /> */}\r\n                    <Button raised containerStyle={styles.buttonContainer} onPress={register} title=\"Register\"/>\r\n                </ThemeProvider>\r\n                <View style={{ height: 50 }} />\r\n            </KeyboardAvoidingView>\r\n        </ScrollView >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    scrollContainer: {\r\n        paddingVertical: 20,\r\n        backgroundColor: 'white'\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: 10,\r\n        backgroundColor: 'white'\r\n    },\r\n    button: {\r\n        width: 200,\r\n        marginTop: 10,\r\n        backgroundColor: \"#2B3595\",\r\n        color: 'white'\r\n    },\r\n    buttonContainer: {\r\n        width: 200,\r\n        marginTop: 10,\r\n        backgroundColor: '#2B3595'\r\n    },\r\n    inputContainer: {\r\n        marginTop: 40,\r\n        marginBottom: 20,\r\n        width: 300\r\n    }\r\n})\r\n","import React from 'react'\r\nimport { View ,StyleSheet,Text} from 'react-native'\r\nimport { Avatar ,Badge} from 'react-native-elements'\r\nimport { ListItem } from 'react-native-elements'\r\nimport {db,auth} from \"../firebase\"\r\nconst CustomListItem=({id,chatName,displayName, chatImg,enterChat,message,seen,schedulePushNotification,notify, lastName})=>{\r\n    // const temp=async(chatName,message)=>{\r\n\r\n    //     console.log(chatName,message)\r\n    //     await schedulePushNotification(chatName,message)\r\n\r\n    // }\r\n\r\n    // if(seen===false && notify===false ){\r\n\r\n    // db.collection(auth.currentUser.email).doc(chatName).update({\r\n    //         notify:true\r\n    //     })\r\n    // temp(chatName,message);\r\n    // }\r\n    return (\r\n       <ListItem key={id} onPress={()=>enterChat(id,chatName,chatImg,displayName)}>\r\n           <View>\r\n           <Avatar\r\n           rounded\r\n           source={{\r\n               uri:chatImg\r\n           }}\r\n           />\r\n           {\r\n\r\n            seen?<></>:  <Badge\r\n            status=\"success\"\r\n            containerStyle={{ position: 'absolute', top: -4, right: -4 }}\r\n        />\r\n           }\r\n       \r\n        </View>\r\n           <ListItem.Content>\r\n               <ListItem.Title style={{fontWeight:\"800\"}}>\r\n                  {displayName}\r\n               </ListItem.Title>\r\n               <ListItem.Subtitle numberOfLines={1} ellipsizeMode=\"tail\">\r\n                   {lastName?lastName + \": \" + message:\"\"}\r\n               </ListItem.Subtitle>\r\n           </ListItem.Content>\r\n       </ListItem>\r\n\r\n    )\r\n}\r\nexport default CustomListItem\r\n","\r\nimport React, { useEffect, useLayoutEffect, useState, useRef } from 'react'\r\nimport { ScrollView, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport { Avatar } from 'react-native-elements';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { auth, db } from '../firebase.js';\r\nimport { AntDesign, SimpleLineIcons } from \"@expo/vector-icons\"\r\n\r\nimport CustomListItem from '../components/CustomListItem.js';\r\nimport Constants from 'expo-constants';\r\nimport * as Notifications from 'expo-notifications';\r\nimport { Platform } from 'react-native';\r\n\r\n\r\nNotifications.setNotificationHandler({\r\n  handleNotification: async () => ({\r\n    shouldShowAlert: true,\r\n    shouldPlaySound: true,\r\n    shouldSetBadge: true,\r\n  }),\r\n});\r\n\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n  const [chats, setChats] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [usersD, setUsersD] = useState({});\r\n  const [usersDName, setUsersDName] = useState({});\r\n\r\n  // const [expoPushToken, setExpoPushToken] = useState('');\r\n  // const [notification, setNotification] = useState(false);\r\n  // const notificationListener = useRef();\r\n  // const responseListener = useRef();\r\n  // async function schedulePushNotification(username, msg) {\r\n\r\n  //   await Notifications.scheduleNotificationAsync({\r\n  //     content: {\r\n  //       title: \"You've got a new Message from \" + username,\r\n  //       body: msg,\r\n\r\n  //     }\r\n\r\n  //   });\r\n  // }\r\n\r\n  // async function registerForPushNotificationsAsync() {\r\n  //   let token;\r\n  //   if (Constants.isDevice) {\r\n  //     const { status: existingStatus } = await Notifications.getPermissionsAsync();\r\n  //     let finalStatus = existingStatus;\r\n  //     if (existingStatus !== 'granted') {\r\n  //       const { status } = await Notifications.requestPermissionsAsync();\r\n  //       finalStatus = status;\r\n  //     }\r\n  //     if (finalStatus !== 'granted') {\r\n  //       alert('Failed to get push token for push notification!');\r\n  //       return;\r\n  //     }\r\n  //     token = (await Notifications.getExpoPushTokenAsync()).data;\r\n  //     console.log(token);\r\n  //   } else {\r\n  //     alert('Must use physical device for Push Notifications');\r\n  //   }\r\n\r\n  //   if (Platform.OS === 'android') {\r\n  //     Notifications.setNotificationChannelAsync('default', {\r\n  //       name: 'default',\r\n  //       importance: Notifications.AndroidImportance.MAX,\r\n  //       vibrationPattern: [0, 250, 250, 250],\r\n  //       lightColor: '#FF231F7C',\r\n  //     });\r\n  //   }\r\n\r\n  //   return token;\r\n  // }\r\n\r\n  useEffect(() => {\r\n    //   registerForPushNotificationsAsync().then(token => setExpoPushToken(token));\r\n\r\n    //   notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\r\n    //     setNotification(notification);\r\n    //   });\r\n\r\n    //   responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {\r\n    //     console.log(response);\r\n    //   });\r\n\r\n    //   return () => {\r\n    //     Notifications.removeNotificationSubscription(notificationListener.current);\r\n    //     Notifications.removeNotificationSubscription(responseListener.current);\r\n    //   };\r\n    // schedulePushNotification(\"ASdf\",\"ASDf\")\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const signOutUser = () => {\r\n    auth.signOut().then(() => {\r\n      navigation.replace(\"Login\")\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    const unsubscribe = db.collection(auth.currentUser.email).onSnapshot((snapshot) =>\r\n      setChats(snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        data: doc.data(),\r\n      }))\r\n      )\r\n\r\n    );\r\n    return unsubscribe\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n\r\n    const unsubscribe = db.collection(\"users\").onSnapshot((snapshot) =>\r\n      setUsers(snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        data: doc.data(),\r\n      }))\r\n      )\r\n    );\r\n    // console.log(chats)\r\n\r\n\r\n    return unsubscribe\r\n\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // console.log(users)\r\n    var d = {}\r\n    var dName = {}\r\n    for (var i = 0; i < users.length; i++) {\r\n      d[users[i].id] = users[i].data.photoURL\r\n      dName[users[i].id] = users[i].data.displayName \r\n    }\r\n    // console.log(d)\r\n    // console.log(dName)\r\n    setUsersD(d)\r\n    setUsersDName(dName)\r\n  }, [users])\r\n\r\n\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      title: \"joTok\",\r\n      headerStyle: { backgroundColor: \"#2B3595\" },\r\n      headerTitleStyle: { color: \"white\" },\r\n      headerTintColor: \"white\",\r\n      headerTitleAlign: 'center',\r\n      headerLeft: () => (<View style={{ marginLeft: 0 }}>\r\n        <TouchableOpacity activeOpacity={0.5} onPress={signOutUser}>\r\n          <Avatar rounded\r\n            source={{ uri: (auth?.currentUser?.photoURL) ? (auth?.currentUser?.photoURL) : \"https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50.png\" }}\r\n          />\r\n        </TouchableOpacity>\r\n\r\n      </View>),\r\n      headerRight: () => (<View style={{\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        width: 60,\r\n        marginRight: 5\r\n      }}>\r\n        <TouchableOpacity activeOpacity={0.5}>\r\n          <AntDesign name=\"camerao\" size={24} color=\"white\" />\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => navigation.navigate(\"AddChat\")}\r\n          activeOpacity={0.5} >\r\n          <SimpleLineIcons name=\"pencil\" size={24} color=\"white\" />\r\n        </TouchableOpacity>\r\n      </View>)\r\n    });\r\n  }, [navigation])\r\n  const enterChat = (id, chatName, chatImg, displayName) => {\r\n    navigation.navigate(\"Chat\", {\r\n      id,\r\n      chatName,\r\n      chatImg,\r\n      displayName\r\n    })\r\n  }\r\n  // console.log(users)\r\n  useEffect(() => {\r\n    // console.log(chats)\r\n    \r\n  }, [chats])\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      <ScrollView style={styles.container}>\r\n        {chats.map(({ id, data: { chatName, message, seen, notify, displayName } }) => <CustomListItem key={id} id={id}\r\n          chatName={chatName} enterChat={enterChat} displayName={usersDName[chatName] ? usersDName[chatName] : chatName}\r\n          message={message} seen={seen} notify={notify} lastName={displayName}\r\n          // schedulePushNotification={schedulePushNotification}\r\n          chatImg={usersD[chatName] ? usersD[chatName] : \"https://robohash.org/\" + chatName} />\r\n\r\n        )}\r\n\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: \"100%\",\r\n  }\r\n\r\n})\r\n","import React, { useEffect, useLayoutEffect, useState } from 'react'\r\nimport { View, StyleSheet } from 'react-native'\r\nimport { ThemeProvider, Button, Input, Image, Text } from 'react-native-elements'\r\nimport Icon from \"react-native-vector-icons/FontAwesome\"\r\nimport { auth, db } from '../firebase'\r\nconst AddChatScreen = ({ navigation }) => {\r\n\r\n    const theme = {\r\n        colors: {\r\n            primary: 'white',\r\n            secondary: 'white'\r\n        },\r\n        Button: {\r\n            titleStyle: {\r\n                // color: 'white',\r\n            },\r\n        },\r\n    };\r\n\r\n\r\n    const [input, setInput] = useState(\"\");\r\n    const createChat = async () => {\r\n        await db.collection(auth.currentUser.email).doc(input).set({\r\n            chatName: input\r\n        })\r\n            .then(() => { })\r\n            .catch(error => alert(error.message))\r\n\r\n        await db.collection(input).doc(auth.currentUser.email).set({\r\n            chatName: auth.currentUser.email\r\n        })\r\n            .then(() => {\r\n                navigation.goBack()\r\n            })\r\n            .catch(error => alert(error.message))\r\n\r\n\r\n    }\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions(\r\n            {\r\n                title: \"Start New Chat\"\r\n            }\r\n        )\r\n\r\n\r\n    }, [navigation])\r\n    return (\r\n        <View style={styles.container}>\r\n            <Input placeholder=\"Enter a chat name\"\r\n                onChangeText={text => setInput(text)}\r\n                onSubmitEditing={createChat}\r\n                leftIcon={\r\n                    <Icon name=\"wechat\" type=\"antdesing\" color=\"#2B3595\" size={24} />\r\n                }\r\n            />\r\n            <ThemeProvider theme={theme}>\r\n                <Button\r\n                    onPress={createChat} type='outline'\r\n                    containerStyle={styles.buttonContainer}\r\n                    title=\"Search\"\r\n                />\r\n            </ThemeProvider>\r\n\r\n            <Image source={require('../assets/logo.png')}\r\n                style={styles.imageStyle}/>\r\n            <Text h2 style={styles.AppTitle}>JoTok</Text>\r\n        </View>\r\n    )\r\n}\r\nexport default AddChatScreen\r\nconst styles = StyleSheet.create({\r\n\r\n    container: {\r\n        padding: 20,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column'\r\n    },\r\n    buttonContainer: {\r\n        // width: 200,\r\n        marginTop: 10,\r\n        backgroundColor: '#2B3595',\r\n        color: 'white'\r\n    },\r\n    imageStyle: {\r\n        height: 200,\r\n        width: 200,\r\n        margin: '20%'\r\n    },\r\n    AppTitle: {\r\n        margin: 20,\r\n        textAlign: 'center',\r\n        width: '100%',\r\n        color: '#999',\r\n        margin: '20%',\r\n        marginTop: 5,\r\n        justifyContent:'center',\r\n        alignSelf: 'center'\r\n    }\r\n\r\n})\r\n","import React, { useEffect, useLayoutEffect, useState, useRef } from 'react'\r\nimport { View, StyleSheet, Text, TouchableOpacity, TouchableWithoutFeedback, KeyboardAvoidingView, Platform, ScrollView, TextInput, Keyboard } from 'react-native'\r\nimport { Avatar } from 'react-native-elements'\r\nimport { AntDesign, SimpleLineIcons, Ionicons } from \"@expo/vector-icons\"\r\nimport { SafeAreaView } from 'react-native-safe-area-context'\r\nimport { StatusBar } from 'expo-status-bar'\r\nimport * as firebase from \"firebase\"\r\nimport { auth, db } from '../firebase'\r\n\r\nconst ChatScreen = ({ navigation, route }) => {\r\n    const [input, setInput] = useState(\"\")\r\n    const [messages, setMessages] = useState([])\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: \"Chat\",\r\n            headerBackTitleVisible: false,\r\n            headerTitleAlign: \"left\",\r\n            headerTitle: () => <View\r\n                style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\"\r\n                }}>\r\n                <Avatar rounded\r\n                    source={{ uri: route.params.chatImg }}\r\n                />\r\n                <Text style={{ color: \"white\", marginLeft: 10, fontWeight: \"700\" }}>\r\n                    {route.params.displayName}\r\n                </Text>\r\n            </View>,\r\n            // headerLeft:()=>(\r\n            //     <TouchableOpacity\r\n            //     style={{marginLeft:10}}\r\n            //     onPress={navigation.goBack}\r\n            //     >\r\n            //         <AntDesign name=\"arrowleft\" size={24} color=\"white\"></AntDesign>\r\n            //     </TouchableOpacity>\r\n            // )\r\n        })\r\n    }, [navigation])\r\n\r\n    const sendMessage = async () => {\r\n\r\n        Keyboard.dismiss();\r\n\r\n        // add to messages collection\r\n        await db.collection(auth.currentUser.email).doc(route.params.id).collection(\"messages\").add({\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp() || null,\r\n            message: input,\r\n            displayName: auth.currentUser.displayName,\r\n            email: auth.currentUser.email,\r\n            photoURL: auth.currentUser.photoURL,\r\n        })\r\n\r\n        await db.collection(route.params.id).doc(auth.currentUser.email).collection(\"messages\").add({\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp() || null,\r\n            message: input,\r\n            displayName: auth.currentUser.displayName,\r\n            email: auth.currentUser.email,\r\n            photoURL: auth.currentUser.photoURL,\r\n        })\r\n        // add last chat\r\n        await db.collection(route.params.id).doc(auth.currentUser.email).update({\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp() || null,\r\n            message: input,\r\n            displayName: auth.currentUser.displayName,\r\n            email: auth.currentUser.email,\r\n            photoURL: auth.currentUser.photoURL,\r\n            seen: false,\r\n            notify: false\r\n        })\r\n\r\n        await db.collection(auth.currentUser.email).doc(route.params.id).update({\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp() || null,\r\n            message: input,\r\n            displayName: auth.currentUser.displayName,\r\n            email: auth.currentUser.email,\r\n            photoURL: auth.currentUser.photoURL,\r\n            seen: true,\r\n            notify: false\r\n        })\r\n\r\n        setInput(\"\")\r\n\r\n    }\r\n    useLayoutEffect(() => {\r\n        const unsubscribe = db.collection(auth.currentUser.email).doc(route.params.id).\r\n            collection(\"messages\").orderBy(\"timestamp\").onSnapshot(snapshot => setMessages(\r\n                snapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                }))\r\n            ))\r\n\r\n        return unsubscribe\r\n    }, [route])\r\n\r\n    useEffect(() => {\r\n        db.collection(auth.currentUser.email).doc(route.params.id).update({\r\n            seen: true,\r\n            notify: true\r\n        })\r\n\r\n    }, [messages])\r\n    const scrollViewRef = useRef();\r\n    return (\r\n        <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"} keyboardVerticalOffset={140} style={styles.container}>\r\n            <TouchableWithoutFeedback style={{display: 'flex'}}>\r\n                <>\r\n                    <ScrollView style={styles.chatView}\r\n                        ref={scrollViewRef}\r\n                        onContentSizeChange={() => scrollViewRef.current.scrollToEnd({ animated: true })}\r\n                    >\r\n                        {messages.map(({ id, data }) => (\r\n                            data.email === auth.currentUser.email ?\r\n                                (\r\n                                    <View key={id} style={styles.reciever}>\r\n                                        <Text style={styles.recieverText}>{data.message}</Text>\r\n                                    </View>\r\n                                ) :\r\n                                (\r\n\r\n                                    <View key={id} style={styles.sender}>\r\n                                        <Text style={styles.senderText}>{data.message}</Text>\r\n                                    </View>\r\n                                )\r\n                        ))}\r\n                    </ScrollView>\r\n                    <View style={styles.footer}>\r\n                        <TextInput placeholder=\"Signal Message\"\r\n                            value={input}\r\n                            onChangeText={(text) => setInput(text)}\r\n                            style={styles.textInput}\r\n                            onSubmitEditing={sendMessage}\r\n                        />\r\n                        <TouchableOpacity onPress={sendMessage} activeOpacity={0.5}>\r\n                            <Ionicons name=\"send\" size={24} color=\"#2B68E6\" />\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </>\r\n            </TouchableWithoutFeedback>\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\nexport default ChatScreen\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    footer: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        padding: 15,\r\n        backgroundColor: \"transparent\"\r\n    },\r\n    textInput: {\r\n        bottom: 0,\r\n        height: 50,\r\n        flex: 1,\r\n        marginRight: 15,\r\n        backgroundColor: \"#ECECEC\",\r\n        // borderWidth: 1,\r\n        padding: 15,\r\n        color: \"grey\",\r\n        borderRadius: 30,\r\n\r\n    },\r\n    chatView: {\r\n        flex: 1,\r\n        paddingTop: 10,\r\n    },\r\n    recieverText: {\r\n        color: \"black\",\r\n        fontWeight: \"500\",\r\n        // marginLeft: 10,\r\n        // marginBottom: 15\r\n    },\r\n    senderText: {\r\n        color: \"white\",\r\n        fontWeight: \"500\",\r\n        // margin: 10,\r\n        // marginBottom: 2\r\n    },\r\n    reciever: {\r\n        padding: 10,\r\n        alignSelf: \"flex-end\",\r\n        backgroundColor: \"#E7EAED\",\r\n        borderRadius: 10,\r\n        borderBottomRightRadius: 0,\r\n        marginRight: 15,\r\n        marginBottom: 2,\r\n        maxWidth: \"80%\",\r\n        position: \"relative\"\r\n    },\r\n    sender: {\r\n        padding: 10,\r\n        backgroundColor: \"#2B3595\",\r\n        alignSelf: \"flex-start\",\r\n        borderRadius: 10,\r\n        borderBottomLeftRadius: 0,\r\n        marginLeft: 15,\r\n        marginBottom: 2,\r\n        maxWidth: \"80%\",\r\n        position: \"relative\"\r\n    },\r\n    senderName: {\r\n        left: 10,\r\n        paddingRight: 10,\r\n        fontSize: 10,\r\n        color: \"white\"\r\n    }\r\n})\r\n\r\n","import React from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport RegisterScreen from './screens/RegisterScreen';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport AddChatScreen from \"./screens/AddChatScreen\"\r\nimport ChatScreen from \"./screens/ChatScreen\"\r\n\r\n\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst globalScreenOptions = {\r\n  headerStyle: { backgroundColor: '#2B3595' },\r\n  headerTitleStyle: { color: \"white\" },\r\n  headerTintColor: \"white\",\r\n};\r\n\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator screenOptions={globalScreenOptions}>\r\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n        <Stack.Screen name=\"Register\" component={RegisterScreen} />\r\n        <Stack.Screen name=\"Home\" component={HomeScreen}  />\r\n        <Stack.Screen name=\"AddChat\" component={AddChatScreen} />\r\n        <Stack.Screen name=\"Chat\" component={ChatScreen} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\n"],"sourceRoot":""}